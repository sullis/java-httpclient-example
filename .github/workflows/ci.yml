name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        java: [ '11', '16' ]
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: 'zulu'
    - name: print Java version
      run: java -version
    - uses: actions/cache@v2.1.5
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: print GitHub Actor
      env:
        GITHUB_ACTOR: ${{ github.actor }}
      run: echo "$GITHUB_ACTOR"
    - name: Build
      run: mvn --no-transfer-progress -B clean package

  automerge:
    runs-on: [ubuntu-latest]
    name: automerge
    needs: [build]
    if: github.base_ref == 'main' && github.actor == 'dependabot[bot]'
    steps:
    - name: merge
      uses: actions/github-script@v4.0.2
      with:
        script: |
          github.pulls.merge({
            owner: context.payload.repository.owner.login,
            repo: context.payload.repository.name,
            pull_number: context.payload.pull_request.number,
            merge_method: 'squash'
          })
        github-token: ${{secrets.GITHUB_TOKEN}}
